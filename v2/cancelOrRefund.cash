pragma cashscript ^0.8.0;

// Pledge receipt of smart contract flipstarter used to cancel or refund pledge
// All the cancelOrRefund contracts for a given campaign share the same address but with different NFTs attached

// Opcode count: 37 (max 201)
// Bytesize: 56 (max 520)

contract cancelOrRefund(
    int blockheightCampaignEnd
) {
    function refund(
    ) {
        // can only be spent with campaign contract
    	bytes categoryID = tx.inputs[1].tokenCategory.split(64)[0];
        require(tx.inputs[0].tokenCategory == categoryID + 0x02);

        // require that the campaign expired
        require(tx.time >= blockheightCampaignEnd);
    }
    function cancel(
        pubkey pledgerPk,
        sig pledgerSig
    ) {
        // can only be spent with campaign contract
    	bytes categoryID = tx.inputs[1].tokenCategory.split(64)[0];
        require(tx.inputs[0].tokenCategory == categoryID + 0x02);

        // so only the pledger himself can cancel before expiration
        bytes refundLockingBytecode = tx.inputs[1].nftCommitment.split(8)[1];
        // parse the pkh from the lockingbytecode
        bytes pledgerPkh = refundLockingBytecode.split(3)[1].split(20)[0];
        require(hash160(pledgerPk) == pledgerPkh);
        require(checkSig(pledgerSig, pledgerPk));
    }
}